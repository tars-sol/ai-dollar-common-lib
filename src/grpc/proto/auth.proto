syntax = "proto3";

package auth;
import "google/protobuf/empty.proto";

service AuthService {
  rpc Register (RegisterRequest) returns (AuthResponse);
  rpc Login (LoginRequest) returns (AuthResponse);
  rpc SsoLogin (SsoLoginRequest) returns (AuthResponse);
  rpc WalletNonce (WalletNonceRequest) returns (WalletNonceResponse);
  rpc WalletLogin (WalletLoginRequest) returns (AuthResponse);
  rpc LinkWallet (LinkWalletRequest) returns (AuthResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (AuthResponse);
  rpc RevokeToken(RevokeTokenRequest) returns (RevokeTokenResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc Health(google.protobuf.Empty) returns (HealthResponse);
  rpc FollowUser (FollowRequest) returns (SuccessResponse);
  rpc ListOnboardingTopics (google.protobuf.Empty) returns (OnboardingTopicsResponse);
  rpc SubmitOnboardingTopics (SubmitOnboardingTopicsRequest) returns (SuccessResponse);
}
message SuccessResponse{
  bool success = 1 ; 
}
message FollowRequest{
  string roleId = 1;
  string followingId = 2;
  string role = 3;
  string userId = 5;
  bool follow = 4;
}
message RevokeTokenRequest{
  string accessToken = 2;
  string refreshToken = 1;
}
message ValidateTokenRequest{
  string token = 1;
}
message ValidateTokenResponse{
   bool isValid =1;
}
message RevokeTokenResponse{
  bool success = 1;
}
message RegisterRequest {
  string email = 1;
  string password = 2;
  string username = 3;
  string name = 4;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message SsoLoginRequest {
  string idToken = 1;
  string provider = 2;
}

message WalletNonceRequest {
  string wallet = 1;
}

message WalletNonceResponse {
  string walletNonce = 1;
}

message WalletLoginRequest {
  string walletAddress = 1;
  string signature = 2;
  string nonce = 3;
}
message HealthResponse{
  bool isHealthy = 1;
}
message LinkWalletRequest {
  string userId = 1;      
  string walletAddress = 2;
  string signature = 3;
  string nonce = 4;
}

message RefreshTokenRequest {
  string refreshToken = 1;
}

message UserRequest {
  string id = 1;
  string email = 2;
  string walletAddress = 3;
  string role = 4;
  string roleId = 5;
  string name = 6;
  string username = 7;
}

message AuthResponse {
  string token = 1;
  string refreshToken = 2;
  UserRequest user = 3;
}

message Topic {
  string id   = 1; // slug/ID (e.g., "lifestyle")
  string name = 2; // display label (e.g., "Lifestyle")
}

message OnboardingTopicsResponse {
  repeated Topic topics = 1;
}

message SubmitOnboardingTopicsRequest {
  string userId = 1;
  repeated string topicIds = 2; // e.g., ["technology","ai-ml","beginner-friendly"]
}
