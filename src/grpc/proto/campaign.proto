syntax = "proto3";

package campaign;
// gRPC Service
service CampaignService {
  rpc CreateCampaign(CreateCampaignRequest) returns (CampaignResponse);
  rpc GetCampaignsByBrandId(GetCampaignsByBrandIdRequest) returns (GetCampaignsResponse);
  rpc GetCampaignById(CampaignsByIdRequest) returns (CampaignResponse);
  rpc UpdateCampaign(UpdateCampaignRequest) returns (CampaignResponse);
  rpc UpdateCampaignTasks(UpdateTaskRequest) returns (TaskResponse);
  rpc GetTasksByCampaignId(GetTasksByCampaignIdRequest) returns (GetTasksResponse);
  rpc DeleteCampaignById(CampaignsByIdRequest) returns (CampaignResponse);
  rpc DeleteTaskById(DeleteTaskByIdRequest) returns (TaskResponse);
  rpc AddProfileToCampaign(UpdatePrivateCampaignProfilesRequest) returns (SuccessResponse);
  rpc RemoveProfileFromCampaign(UpdatePrivateCampaignProfilesRequest) returns (SuccessResponse);
  rpc JoinPublicCampaign(JoinPublicCampaignRequest) returns (SuccessResponse);
  rpc LeaveCampaign(LeaveCampaignRequest) returns (SuccessResponse);
}

// Request message for creating a campaign
message CreateCampaignRequest {
  string brandId = 1;
  double amountToInvest = 2;
  string startDate = 3; 
  string endDate = 4;
  repeated TaskInput tasks = 5;
  string name = 6;
  string description = 7;
  repeated string profileIds = 9;
  bool isPrivate = 10;
}
message SuccessResponse{
  bool success = 1;
}
// Single task input (part of the campaign)
message TaskInput {
  string title = 1;
  string description = 2;
  string type = 4;
}
message UpdateTaskRequest{
  optional string title = 1;
  optional string description = 2;
  string brandId = 5 ;
  optional string type = 3;
  string id = 4;
}
message JoinPublicCampaignRequest{
  string campaignId = 1;
  string profileId = 2;
}
message LeaveCampaignRequest{
  string campaignId = 1;
  string profileId = 2;
}
message UpdatePrivateCampaignProfilesRequest{
  string campaignId = 1;
  string profileId = 2;
  string brandId = 3;
}

// Response message after creating a campaign
message CampaignResponse {
  string id = 1;
  string brandId = 2;
  double amountToInvest = 3;
  string startDate = 4;
  string endDate = 5;
  string createdAt = 7;
  string updatedAt = 8;
  string status = 11;
  bool isPrivate = 12;
  string name = 9;
  string description = 10;


}
message UpdateCampaignRequest {
  string id = 1;
  string brandId = 2;
  optional double amountToInvest = 3;
  optional string startDate = 4;
  optional string endDate = 5;
  optional string name = 9;
  optional string description = 10;

}

// Task returned in the response
message TaskResponse{
  string id = 1;
  string title = 2;
  string description = 3;
  string campaignId = 7;
  string type = 8;
  string createdAt = 5;
  string updatedAt = 6;
}
message GetCampaignsByBrandIdRequest{
  string roleId = 1;
  string role = 3;
  optional string brandId = 2;
  optional string sortBy = 4; // e.g., "createdAt", "amountToInvest"
  optional string sortOrder = 5; // "asc" or "desc"
  optional string status = 6; // e.g., "active", "completed"

  optional string startDateFrom=7; // e.g., "2023-01-01"
  optional string startDateTo=8; // e.g., "2023-12-31"
  optional string endDateFrom=9; // e.g., "2023-01-01"
  optional string endDateTo=10; // e.g., "2023-12-31"

}
message CampaignsByIdRequest{
  string id = 1;
  string roleId = 3;
  string role = 4;
}
message DeleteTaskByIdRequest{
  string brandId = 2;
  string id = 1;
}
message DeleteCampaignByIdRequest{
  string brandId = 2;
  string id = 1;
}

message GetTasksByCampaignIdRequest{
  string campaignId = 1;
}
message GetTasksResponse{
  repeated TaskResponse tasks = 1;
}
message GetCampaignsResponse{
  repeated CampaignResponse campaigns = 1;
}
